{"version":3,"sources":["main.js"],"names":["$siteList","$","$lastLi","find","x","localStorage","getItem","xObject","JSON","parse","hashMap","logo","url","simplifyUrl","replace","render","remove","forEach","node","index","$li","insertBefore","on","window","open","e","stopPropagation","splice","prompt","indexOf","console","log","push","toUpperCase","onbeforeunload","string","stringify","setItem","document","key","i","length"],"mappings":"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","file":"main.9e9c566e.map","sourceRoot":"..\\src","sourcesContent":["const $siteList = $('.siteList')\r\nconst $lastLi = $siteList.find('li.last') // 找最后一个li\r\nconst x = localStorage.getItem('x')\r\nconst xObject = JSON.parse(x) // 不能解析空字符串，会直接返回一个null\r\nconst hashMap = xObject || [\r\n    {logo: 'A', url: 'https://www.acfun.cn'},\r\n    {logo: 'B', url: 'https://www.bilibili.com'}\r\n]\r\n\r\nconst simplifyUrl=(url)=>{\r\n    return url.replace('https://','')\r\n    .replace('http://', '')\r\n    .replace('www.','')\r\n    .replace(/\\/.*/, '') //删除/开头的内容\r\n}\r\n\r\nconst render = ()=>{\r\n    $siteList.find('li:not(.last)').remove() // 每次增加新的之前，把原有的那两个li清空，就是没有这句的话，每次新增会同时把数组里原有的那两个再增加一遍\r\n    // 点击的时候不在创建新site了\r\n    hashMap.forEach((node, index)=>{\r\n        // const $li = $(`<li>\r\n        //         <div class=\"site\">\r\n        //             <div class=\"logo\">${node.logo}</div>\r\n        //             <div class=\"link\">${simplifyUrl(node.url)}</div>\r\n        //             <div class=\"close\">\r\n        //                 <svg class=\"icon\">\r\n        //                     <use xlink:href=\"#icon-close\"></use>\r\n        //                 </svg>\r\n        //             </div>\r\n        //         </div>\r\n        // </li>`).insertBefore($lastLi)\r\n        const $li = $(`<li>\r\n        <div class=\"site\">\r\n          <div class=\"logo\">${node.logo}</div>\r\n          <div class=\"link\">${simplifyUrl(node.url)}</div>\r\n          <div class=\"close\">...\r\n          </div>\r\n        </div>\r\n      </li>`).insertBefore($lastLi)        \r\n        $li.on('click', ()=>{\r\n            window.open(node.url)\r\n        })\r\n        $li.on('click', '.close', (e)=>{\r\n            e.stopPropagation()\r\n            hashMap.splice(index,1)\r\n            render()\r\n        })\r\n    })\r\n}\r\n\r\n            // <svg class=\"icon\">\r\n            //   <use xlink:href=\"#icon-close\"></use>\r\n            // </svg>\r\n\r\n\r\nrender(); // 首先render，点击之后就push，push之后再render\r\n\r\n// foeEach 会遍历数组hashMap，把每个元素作为参数传给后面的函数\r\n// console.log($) // 用jQuery库 里的$函数来监听用户输入的网址\r\n$('.addButton').on('click',()=>{\r\n    let url=window.prompt('请问你要添加的网址是啥？')\r\n    if(url.indexOf('http')!==0){\r\n        url = 'https://' +url\r\n    }\r\n    console.log(url)\r\n    hashMap.push({\r\n        logo: simplifyUrl(url)[0].toUpperCase(),\r\n        url:url\r\n    })\r\n//     const $site = $(`<li>\r\n//     <a href=\"${url}\"> \r\n//     <div class=\"site\">\r\n//         <div class=\"logo\">${url1[0]}</div>\r\n//         <div class=\"link\">${url}</div>\r\n//     </div>\r\n// </a>\r\n//     </li>`).insertBefore($lastLi) // ${}表示插值法；li还能这样插入?没看懂\r\nrender();\r\n})\r\n\r\n// 接下来就是用户退出网站之后，之前添加的网站标签都没了的情况了；想个办法把之前的标签保存下来；用户添加或离开页面的时候存下来\r\nwindow.onbeforeunload = ()=>{\r\n    console.log('页面要关闭了');\r\n    const string = JSON.stringify(hashMap)\r\n    window.localStorage.setItem('x', string) // 在本地内存设置一个'x'属性，这个属性的值就是string\r\n}\r\n\r\n$(document).on('keypress', (e)=>{\r\n    const key = e.key.toUpperCase() // 变量名和获取的属性名相同，可以简写成这样{key} = e\r\n    for(let i=0;i<hashMap.length;i++){\r\n        if(hashMap[i].logo === key){\r\n            window.open(hashMap[i].url);\r\n        }\r\n    }\r\n})"]}